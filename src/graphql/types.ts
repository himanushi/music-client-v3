import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: string;
  /** Table id, hex Timestamp, ID */
  TTID: string;
};

/** Autogenerated input type of AddPlaylistItems */
export type AddPlaylistItemsInput = {
  /** プレイリストID */
  readonly playlistId: Scalars['TTID'];
  /** 追加したい曲ID */
  readonly trackIds: ReadonlyArray<Scalars['TTID']>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of AddPlaylistItems */
export type AddPlaylistItemsPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  /** 曲追加されたプレイリスト */
  readonly playlist?: Maybe<Playlist>;
};

/** アルバム */
export type Album = {
  /** Apple Music アルバム */
  readonly appleMusicAlbum?: Maybe<AppleMusicAlbum>;
  /** 大型アートワーク */
  readonly artworkL: Artwork;
  /** 中型アートワーク */
  readonly artworkM: Artwork;
  /** コピーライト */
  readonly copyright: Scalars['String'];
  /** 追加日 */
  readonly createdAt: Scalars['ISO8601DateTime'];
  /** ID */
  readonly id: Scalars['TTID'];
  /** iTunes アルバム */
  readonly itunesAlbum?: Maybe<AppleMusicAlbum>;
  /** タイトル */
  readonly name: Scalars['String'];
  /** レーベル */
  readonly recordLabel: Scalars['String'];
  /** 発売日 */
  readonly releaseDate: Scalars['ISO8601DateTime'];
  /** ステータス */
  readonly status: StatusEnum;
  /** トラック数 */
  readonly totalTracks: Scalars['Int'];
  /** トラック */
  readonly tracks: ReadonlyArray<Track>;
};

export type AlbumsConditionsInputObject = {
  /** ユーザー名 */
  readonly usernames?: Maybe<ReadonlyArray<Scalars['String']>>;
  /** アーティストID */
  readonly artists?: Maybe<IdInputObject>;
  /** アルバムID */
  readonly albums?: Maybe<IdInputObject>;
  /** トラックID */
  readonly tracks?: Maybe<IdInputObject>;
  /** アルバム名(あいまい検索) */
  readonly name?: Maybe<Scalars['String']>;
  /** 表示ステータス */
  readonly status?: Maybe<ReadonlyArray<StatusEnum>>;
  /** お気に入り */
  readonly favorite?: Maybe<Scalars['Boolean']>;
};

export type AlbumsQueryOrderEnum =
  /** 追加順 */
  | 'NEW'
  /** 発売日順 */
  | 'RELEASE'
  /** 人気順 */
  | 'POPULARITY';

export type AlbumsSortInputObject = {
  /** 並び順対象 */
  readonly order?: Maybe<AlbumsQueryOrderEnum>;
  /** 並び順 */
  readonly type?: Maybe<SortEnum>;
};

/** Apple Music アルバム */
export type AppleMusicAlbum = {
  /** Apple Music ID */
  readonly appleMusicId: Scalars['String'];
  /** ID */
  readonly id: Scalars['TTID'];
  /** タイトル */
  readonly name: Scalars['String'];
};

/** Apple Music トラック */
export type AppleMusicTrack = {
  /** Apple Music ID */
  readonly appleMusicId: Scalars['String'];
  /** ID */
  readonly id: Scalars['TTID'];
  /** タイトル */
  readonly name: Scalars['String'];
};

/** アーティスト */
export type Artist = {
  /** 大型アートワーク */
  readonly artworkL: Artwork;
  /** 中型アートワーク */
  readonly artworkM: Artwork;
  /** 追加日 */
  readonly createdAt: Scalars['ISO8601DateTime'];
  /** ID */
  readonly id: Scalars['TTID'];
  /** 名前 */
  readonly name: Scalars['String'];
  /** 発売日 */
  readonly releaseDate: Scalars['ISO8601DateTime'];
  /** ステータス */
  readonly status: StatusEnum;
};

export type ArtistsConditionsInputObject = {
  /** ユーザー名 */
  readonly usernames?: Maybe<ReadonlyArray<Scalars['String']>>;
  /** アルバムID */
  readonly albums?: Maybe<IdInputObject>;
  /** トラックID */
  readonly tracks?: Maybe<IdInputObject>;
  /** アーティスト名(あいまい検索) */
  readonly name?: Maybe<Scalars['String']>;
  /** 表示ステータス */
  readonly status?: Maybe<ReadonlyArray<StatusEnum>>;
  /** お気に入り */
  readonly favorite?: Maybe<Scalars['Boolean']>;
};

export type ArtistsQueryOrderEnum =
  /** 名前順 */
  | 'NAME'
  /** 追加順 */
  | 'NEW'
  /** 人気順 */
  | 'POPULARITY';

export type ArtistsSortInputObject = {
  /** ソート対象 */
  readonly order?: Maybe<ArtistsQueryOrderEnum>;
  /** 並び順 */
  readonly type?: Maybe<SortEnum>;
};

/** アートワーク */
export type Artwork = {
  /** 高さ */
  readonly height?: Maybe<Scalars['Int']>;
  /** URL */
  readonly url?: Maybe<Scalars['String']>;
  /** 幅 */
  readonly width?: Maybe<Scalars['Int']>;
};

/** Autogenerated input type of ChangeFavorites */
export type ChangeFavoritesInput = {
  /** お気に入り変更したいアーティストID */
  readonly artistIds?: Maybe<ReadonlyArray<Scalars['TTID']>>;
  /** お気に入り変更したいアルバムID */
  readonly albumIds?: Maybe<ReadonlyArray<Scalars['TTID']>>;
  /** お気に入り変更したいトラックID */
  readonly trackIds?: Maybe<ReadonlyArray<Scalars['TTID']>>;
  /** お気に入り変更したいプレイリストID */
  readonly playlistIds?: Maybe<ReadonlyArray<Scalars['TTID']>>;
  /** true の場合は一括でお気に入り登録をする。false 場合は一括で解除する。 */
  readonly favorite: Scalars['Boolean'];
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of ChangeFavorites */
export type ChangeFavoritesPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  /** 更新されたカレントユーザー */
  readonly currentUser?: Maybe<CurrentUser>;
  readonly error?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of ChangeStatus */
export type ChangeStatusInput = {
  /** 変更したいアーティストID */
  readonly artistId?: Maybe<Scalars['TTID']>;
  /** 変更したいアルバムID */
  readonly albumId?: Maybe<Scalars['TTID']>;
  /** 変更したいトラックID */
  readonly trackId?: Maybe<Scalars['TTID']>;
  /** 変更したいステータス */
  readonly status: StatusEnum;
  /** true の場合は関連のステータスは変更しない。デフォルトは false。アーティスト限定 */
  readonly only?: Maybe<Scalars['Boolean']>;
  /** true の場合は Twitter に投稿する。デフォルトは true */
  readonly tweet?: Maybe<Scalars['Boolean']>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of ChangeStatus */
export type ChangeStatusPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
  /** 変更されたステータスを持ったモデル */
  readonly model?: Maybe<ModelHasStatusUnion>;
};

/** Autogenerated input type of ClearCache */
export type ClearCacheInput = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of ClearCache */
export type ClearCachePayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
  readonly results?: Maybe<ReadonlyArray<Scalars['String']>>;
};

/** Autogenerated input type of CompactAlbum */
export type CompactAlbumInput = {
  /** 統合後のアルバム名。 */
  readonly name: Scalars['String'];
  /** 統合したいアルバムID。Apple Music アルバムのみ統合される。指定した順番通りに統合する。 */
  readonly albumIdsForAppleMusic?: Maybe<ReadonlyArray<Scalars['TTID']>>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of CompactAlbum */
export type CompactAlbumPayload = {
  /** 統合されたアルバム */
  readonly album?: Maybe<Album>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of CreateRadio */
export type CreateRadioInput = {
  readonly playlistId: Scalars['TTID'];
  readonly random?: Maybe<Scalars['Boolean']>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of CreateRadio */
export type CreateRadioPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly radio?: Maybe<Radio>;
};

/** カレントユーザー */
export type CurrentUser = {
  /** お気に入り */
  readonly favorite: Favorite;
  /** ID */
  readonly id: Scalars['TTID'];
  /** 名前 */
  readonly name: Scalars['String'];
  /** 公開情報 */
  readonly publicInformations: ReadonlyArray<PublicInformation>;
  /** 登録済み */
  readonly registered: Scalars['Boolean'];
  /** ロール */
  readonly role: Role;
  /** ユーザー名 */
  readonly username: Scalars['String'];
};

export type CursorInputObject = {
  readonly offset?: Maybe<Scalars['Int']>;
  readonly limit?: Maybe<Scalars['Int']>;
};

/** Autogenerated input type of DeletePlaylist */
export type DeletePlaylistInput = {
  readonly playlistId?: Maybe<Scalars['TTID']>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of DeletePlaylist */
export type DeletePlaylistPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
  /** 削除結果 */
  readonly result?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of DeleteRadio */
export type DeleteRadioInput = {
  readonly radioId: Scalars['TTID'];
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of DeleteRadio */
export type DeleteRadioPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly playlist?: Maybe<Playlist>;
};

/** お気に入り */
export type Favorite = {
  /** アルバムID */
  readonly albumIds: ReadonlyArray<Scalars['String']>;
  /** アーティストID */
  readonly artistIds: ReadonlyArray<Scalars['String']>;
  /** プレイリストID */
  readonly playlistIds: ReadonlyArray<Scalars['String']>;
  /** トラックID */
  readonly trackIds: ReadonlyArray<Scalars['String']>;
};

/** Autogenerated input type of ForceIgnoreAlbum */
export type ForceIgnoreAlbumInput = {
  /** 除外コンテンツに登録したいアルバムID */
  readonly albumId: Scalars['TTID'];
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of ForceIgnoreAlbum */
export type ForceIgnoreAlbumPayload = {
  /** 除外コンテンツに登録されたアルバム */
  readonly album?: Maybe<Album>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of GenerateSitemaps */
export type GenerateSitemapsInput = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of GenerateSitemaps */
export type GenerateSitemapsPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
  readonly results?: Maybe<ReadonlyArray<Scalars['String']>>;
};


export type IdInputObject = {
  /** ID */
  readonly id?: Maybe<ReadonlyArray<Scalars['TTID']>>;
};

/** Autogenerated input type of IgnoreAlbums */
export type IgnoreAlbumsInput = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of IgnoreAlbums */
export type IgnoreAlbumsPayload = {
  /** IGNOREされたアルバム */
  readonly albums?: Maybe<ReadonlyArray<Album>>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of IgnoreArtists */
export type IgnoreArtistsInput = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of IgnoreArtists */
export type IgnoreArtistsPayload = {
  /** IGNOREされたアーティスト */
  readonly artists?: Maybe<ReadonlyArray<Artist>>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of Login */
export type LoginInput = {
  readonly username: Scalars['String'];
  readonly currentPassword: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of Login */
export type LoginPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly currentUser?: Maybe<CurrentUser>;
};

/** Autogenerated input type of Logout */
export type LogoutInput = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of Logout */
export type LogoutPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly currentUser?: Maybe<CurrentUser>;
  readonly error?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of MixAlbum */
export type MixAlbumInput = {
  /** 混合したいアルバムID */
  readonly albumIds: ReadonlyArray<Scalars['TTID']>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of MixAlbum */
export type MixAlbumPayload = {
  /** 混合されたアルバム */
  readonly album?: Maybe<Album>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of MixArtist */
export type MixArtistInput = {
  /** メインアーティストID */
  readonly mainArtistId: Scalars['TTID'];
  /** サブアーティストID */
  readonly subArtistId: Scalars['TTID'];
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of MixArtist */
export type MixArtistPayload = {
  /** 混合されたアーティスト */
  readonly artist?: Maybe<Artist>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
};

/** ステータスをもつモデルのいずれか */
export type ModelHasStatusUnion = Album | Artist | Track;

export type Mutation = {
  /** プレイリストに曲を追加する */
  readonly addPlaylistItems?: Maybe<AddPlaylistItemsPayload>;
  /** お気に入り一括変更 */
  readonly changeFavorites?: Maybe<ChangeFavoritesPayload>;
  /** ステータス変更。関連するアルバム, トラック, 各音楽サービスアルバム、各音楽サービストラックも同じステータスで更新される。 */
  readonly changeStatus?: Maybe<ChangeStatusPayload>;
  /** 検索結果キャッシュをリセットする */
  readonly clearCache?: Maybe<ClearCachePayload>;
  /** 複数アルバムを単一アルバムに統合する。統合前の複数アルバムは全て IGNORE される。 */
  readonly compactAlbum?: Maybe<CompactAlbumPayload>;
  /** ラジオ作成 */
  readonly createRadio?: Maybe<CreateRadioPayload>;
  /** プレイリストを削除する */
  readonly deletePlaylist?: Maybe<DeletePlaylistPayload>;
  /** ラジオ削除 */
  readonly deleteRadio?: Maybe<DeleteRadioPayload>;
  /** 対象アルバムを除外コンテンツに登録する */
  readonly forceIgnoreAlbum?: Maybe<ForceIgnoreAlbumPayload>;
  /** サイトマップを更新する */
  readonly generateSitemaps?: Maybe<GenerateSitemapsPayload>;
  /** PENDING状態のアルバム全てをIGNOREにする。よく考えてから実行すること。 */
  readonly ignoreAlbums?: Maybe<IgnoreAlbumsPayload>;
  /** PENDING状態のアーティスト全てをIGNOREにする。よく考えてから実行すること。 */
  readonly ignoreArtists?: Maybe<IgnoreArtistsPayload>;
  /** ログイン */
  readonly login?: Maybe<LoginPayload>;
  /** ログアウト */
  readonly logout?: Maybe<LogoutPayload>;
  /**
   * アルバムを混合する。
   * 同じアルバムのはずが各音楽サービスで別のアルバムと認識される場合がある。
   * その場合に使用する。曲数が多いアルバムを正とする。
   */
  readonly mixAlbum?: Maybe<MixAlbumPayload>;
  /**
   * アーティストを混合する。
   * 混合後は修正不可のため注意して使用すること。
   */
  readonly mixArtist?: Maybe<MixArtistPayload>;
  /** サインアップ */
  readonly signup?: Maybe<SignupPayload>;
  /** 人気を集計する */
  readonly tally?: Maybe<TallyPayload>;
  /** 統合したアルバムを元に戻す。統合された単一アルバムは削除される。 */
  readonly uncompactAlbum?: Maybe<UncompactAlbumPayload>;
  /** アルバムの混合を解除する。アルバムと曲数に相違がある音楽サービスアルバムを分離する。 */
  readonly unmixAlbum?: Maybe<UnmixAlbumPayload>;
  /** Google Analytics で PV 数を再計算 */
  readonly updateAnalytics?: Maybe<UpdateAnalyticsPayload>;
  /** カレントユーザー情報更新 */
  readonly updateMe?: Maybe<UpdateMePayload>;
  /** アルバムを最新の状態にする */
  readonly upsertAlbum?: Maybe<UpsertAlbumPayload>;
  /** アーティストを最新の状態にする */
  readonly upsertArtist?: Maybe<UpsertArtistPayload>;
  /** プレイリストを作成更新する */
  readonly upsertPlaylist?: Maybe<UpsertPlaylistPayload>;
  /** ロールを追加更新する */
  readonly upsertRole?: Maybe<UpsertRolePayload>;
};


export type Mutation_AddPlaylistItemsArgs = {
  input: AddPlaylistItemsInput;
};


export type Mutation_ChangeFavoritesArgs = {
  input: ChangeFavoritesInput;
};


export type Mutation_ChangeStatusArgs = {
  input: ChangeStatusInput;
};


export type Mutation_ClearCacheArgs = {
  input: ClearCacheInput;
};


export type Mutation_CompactAlbumArgs = {
  input: CompactAlbumInput;
};


export type Mutation_CreateRadioArgs = {
  input: CreateRadioInput;
};


export type Mutation_DeletePlaylistArgs = {
  input: DeletePlaylistInput;
};


export type Mutation_DeleteRadioArgs = {
  input: DeleteRadioInput;
};


export type Mutation_ForceIgnoreAlbumArgs = {
  input: ForceIgnoreAlbumInput;
};


export type Mutation_GenerateSitemapsArgs = {
  input: GenerateSitemapsInput;
};


export type Mutation_IgnoreAlbumsArgs = {
  input: IgnoreAlbumsInput;
};


export type Mutation_IgnoreArtistsArgs = {
  input: IgnoreArtistsInput;
};


export type Mutation_LoginArgs = {
  input: LoginInput;
};


export type Mutation_LogoutArgs = {
  input: LogoutInput;
};


export type Mutation_MixAlbumArgs = {
  input: MixAlbumInput;
};


export type Mutation_MixArtistArgs = {
  input: MixArtistInput;
};


export type Mutation_SignupArgs = {
  input: SignupInput;
};


export type Mutation_TallyArgs = {
  input: TallyInput;
};


export type Mutation_UncompactAlbumArgs = {
  input: UncompactAlbumInput;
};


export type Mutation_UnmixAlbumArgs = {
  input: UnmixAlbumInput;
};


export type Mutation_UpdateAnalyticsArgs = {
  input: UpdateAnalyticsInput;
};


export type Mutation_UpdateMeArgs = {
  input: UpdateMeInput;
};


export type Mutation_UpsertAlbumArgs = {
  input: UpsertAlbumInput;
};


export type Mutation_UpsertArtistArgs = {
  input: UpsertArtistInput;
};


export type Mutation_UpsertPlaylistArgs = {
  input: UpsertPlaylistInput;
};


export type Mutation_UpsertRoleArgs = {
  input: UpsertRoleInput;
};

/** プレイリスト */
export type Playlist = {
  /** 作者 */
  readonly author?: Maybe<User>;
  /** 作成日 */
  readonly createdAt: Scalars['ISO8601DateTime'];
  /** 説明 */
  readonly description: Scalars['String'];
  /** ID */
  readonly id: Scalars['TTID'];
  /** 自身のプレイリストか判定 */
  readonly isMine?: Maybe<Scalars['Boolean']>;
  /** 曲一覧 */
  readonly items: ReadonlyArray<PlaylistItem>;
  /** タイトル */
  readonly name: Scalars['String'];
  /** 公開種別 */
  readonly publicType: PlaylistPublicTypeEnum;
  /** ジャケットトラック */
  readonly track?: Maybe<Track>;
  /** 更新日 */
  readonly updatedAt: Scalars['ISO8601DateTime'];
};

/** プレイリストトラック */
export type PlaylistItem = {
  /** ID */
  readonly id: Scalars['TTID'];
  /** 曲 */
  readonly track: Track;
  /** トラックナンバー */
  readonly trackNumber: Scalars['Int'];
};

export type PlaylistPublicTypeEnum =
  /** 公開 */
  | 'OPEN'
  /** 非公開 */
  | 'NON_OPEN'
  /** 匿名公開 */
  | 'ANONYMOUS_OPEN';

export type PlaylistsConditionsInputObject = {
  /** プレイリスト名( like 検索) */
  readonly name?: Maybe<Scalars['String']>;
  /** 自身のプレイリスト取得 */
  readonly isMine?: Maybe<Scalars['Boolean']>;
  /** ユーザー名 */
  readonly usernames?: Maybe<ReadonlyArray<Scalars['String']>>;
  /** お気に入り */
  readonly favorite?: Maybe<Scalars['Boolean']>;
};

export type PlaylistsQueryOrderEnum =
  /** 作成日順 */
  | 'NEW'
  /** 更新日順 */
  | 'UPDATE'
  /** 人気順 */
  | 'POPULARITY';

export type PlaylistsSortInputObject = {
  /** 並び順対象 */
  readonly order?: Maybe<PlaylistsQueryOrderEnum>;
  /** 並び順 */
  readonly type?: Maybe<SortEnum>;
};

/** 公開情報 */
export type PublicInformation = {
  /** ID */
  readonly id: Scalars['TTID'];
  /** 公開タイプ */
  readonly publicType: Scalars['String'];
};

export type Query = {
  /** アルバム情報取得 */
  readonly album?: Maybe<Album>;
  /** アルバム一覧取得 */
  readonly albums: ReadonlyArray<Album>;
  /** Apple Music Token */
  readonly appleMusicToken: Scalars['String'];
  /** アーティスト取得 */
  readonly artist?: Maybe<Artist>;
  /** アーティスト一覧取得 */
  readonly artists: ReadonlyArray<Artist>;
  /** カレントユーザー情報取得 */
  readonly me: CurrentUser;
  /** プレイリスト取得 */
  readonly playlist?: Maybe<Playlist>;
  /** プレイリスト一覧取得 */
  readonly playlists: ReadonlyArray<Playlist>;
  /** プレイリスト取得 */
  readonly radio?: Maybe<Radio>;
  /** ラジオ一覧取得 */
  readonly radios: ReadonlyArray<Radio>;
  /** ロール一覧取得 */
  readonly roles: ReadonlyArray<Role>;
  /** トラック情報取得 */
  readonly track?: Maybe<Track>;
  /** トラック一覧取得 */
  readonly tracks: ReadonlyArray<Track>;
};


export type Query_AlbumArgs = {
  id: Scalars['TTID'];
};


export type Query_AlbumsArgs = {
  cursor?: Maybe<CursorInputObject>;
  sort?: Maybe<AlbumsSortInputObject>;
  conditions?: Maybe<AlbumsConditionsInputObject>;
};


export type Query_ArtistArgs = {
  id: Scalars['TTID'];
};


export type Query_ArtistsArgs = {
  cursor?: Maybe<CursorInputObject>;
  sort?: Maybe<ArtistsSortInputObject>;
  conditions?: Maybe<ArtistsConditionsInputObject>;
};


export type Query_PlaylistArgs = {
  id: Scalars['TTID'];
};


export type Query_PlaylistsArgs = {
  cursor?: Maybe<CursorInputObject>;
  sort?: Maybe<PlaylistsSortInputObject>;
  conditions?: Maybe<PlaylistsConditionsInputObject>;
};


export type Query_RadioArgs = {
  id: Scalars['TTID'];
};


export type Query_RadiosArgs = {
  cursor?: Maybe<CursorInputObject>;
  sort?: Maybe<RadiosSortInputObject>;
  conditions?: Maybe<RadiosConditionsInputObject>;
};


export type Query_TrackArgs = {
  id: Scalars['TTID'];
};


export type Query_TracksArgs = {
  cursor?: Maybe<CursorInputObject>;
  sort?: Maybe<TracksSortInputObject>;
  conditions?: Maybe<TracksConditionsInputObject>;
};

/** ラジオ */
export type Radio = {
  /** 説明 */
  readonly description: Scalars['String'];
  /** 再生時間 */
  readonly durationMs: Scalars['Int'];
  /** ID */
  readonly id: Scalars['TTID'];
  /** 自身のラジオか判定 */
  readonly isMine?: Maybe<Scalars['Boolean']>;
  /** 名前 */
  readonly name: Scalars['String'];
  /** 放送開始日 */
  readonly startDatetime?: Maybe<Scalars['ISO8601DateTime']>;
  /** ジャケットトラック */
  readonly track?: Maybe<Track>;
  /** トラック番号 */
  readonly trackNumber: Scalars['Int'];
  readonly tracks: ReadonlyArray<Track>;
};

export type RadiosConditionsInputObject = {
  /** ラジオ名( like 検索) */
  readonly name?: Maybe<Scalars['String']>;
  /** お気に入り */
  readonly favorite?: Maybe<Scalars['Boolean']>;
};

export type RadiosQueryOrderEnum =
  /** 作成日順 */
  | 'NEW'
  /** 人気順 */
  | 'POPULARITY';

export type RadiosSortInputObject = {
  /** 並び順対象 */
  readonly order?: Maybe<RadiosQueryOrderEnum>;
  /** 並び順 */
  readonly type?: Maybe<SortEnum>;
};

/** ロール */
export type Role = {
  /** 出来ること一覧 */
  readonly allowedActions: ReadonlyArray<Scalars['String']>;
  /** 説明 */
  readonly description: Scalars['String'];
  /** ID */
  readonly id: Scalars['TTID'];
  /** 名前 */
  readonly name: Scalars['String'];
};

/** Autogenerated input type of Signup */
export type SignupInput = {
  readonly name: Scalars['String'];
  readonly username: Scalars['String'];
  readonly newPassword: Scalars['String'];
  readonly newPasswordConfirmation: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of Signup */
export type SignupPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly currentUser?: Maybe<CurrentUser>;
};

export type SortEnum =
  /** 昇順 */
  | 'ASC'
  /** 降順 */
  | 'DESC';

export type StatusEnum =
  /** 保留 : デフォルトの検索結果に表示されない */
  | 'PENDING'
  /** 有効 : 通常検索結果に表示される */
  | 'ACTIVE'
  /** 除外 : 検索結果から除外される。最新情報などを取得する際などでも除外される */
  | 'IGNORE';


/** Autogenerated input type of Tally */
export type TallyInput = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of Tally */
export type TallyPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
  readonly result?: Maybe<Scalars['String']>;
};

/** トラック */
export type Track = {
  /** Apple Music トラック */
  readonly appleMusicTracks?: Maybe<ReadonlyArray<AppleMusicTrack>>;
  /** 大型アートワーク */
  readonly artworkL: Artwork;
  /** 中型アートワーク */
  readonly artworkM: Artwork;
  /** ディスク番号 */
  readonly discNumber: Scalars['Int'];
  /** 再生時間 */
  readonly durationMs: Scalars['Int'];
  /** ID */
  readonly id: Scalars['TTID'];
  /** 国際標準レコーディングコード */
  readonly isrc: Scalars['String'];
  /** iTunes トラック */
  readonly itunesTracks?: Maybe<ReadonlyArray<AppleMusicTrack>>;
  /** タイトル */
  readonly name: Scalars['String'];
  /** 人気度 */
  readonly popularity: Scalars['Int'];
  /** プレビューURL */
  readonly previewUrl?: Maybe<Scalars['String']>;
  /** ステータス */
  readonly status: StatusEnum;
  /** トラック番号 */
  readonly trackNumber: Scalars['Int'];
};

export type TracksConditionsInputObject = {
  /** トラック名(あいまい検索) */
  readonly name?: Maybe<Scalars['String']>;
  /** 表示ステータス */
  readonly status?: Maybe<ReadonlyArray<StatusEnum>>;
  /** お気に入り */
  readonly favorite?: Maybe<Scalars['Boolean']>;
  /** ランダム取得 */
  readonly random?: Maybe<Scalars['Boolean']>;
};

export type TracksQueryOrderEnum =
  /** 追加順 */
  | 'NEW'
  /** 人気順 */
  | 'POPULARITY';

export type TracksSortInputObject = {
  /** 並び順対象 */
  readonly order?: Maybe<TracksQueryOrderEnum>;
  /** 並び順 */
  readonly type?: Maybe<SortEnum>;
};

/** Autogenerated input type of UncompactAlbum */
export type UncompactAlbumInput = {
  /** 統合解除したいアルバムID。Apple Music アルバムのみ解除される。 */
  readonly albumIdForAppleMusic?: Maybe<Scalars['TTID']>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of UncompactAlbum */
export type UncompactAlbumPayload = {
  /** 統合解除されたアルバム */
  readonly albums?: Maybe<ReadonlyArray<Album>>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of UnmixAlbum */
export type UnmixAlbumInput = {
  /** 混合解除したいアルバムID */
  readonly albumId: Scalars['TTID'];
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of UnmixAlbum */
export type UnmixAlbumPayload = {
  /** 混合されたアルバム */
  readonly albums?: Maybe<ReadonlyArray<Album>>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of UpdateAnalytics */
export type UpdateAnalyticsInput = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of UpdateAnalytics */
export type UpdateAnalyticsPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
  readonly result?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of UpdateMe */
export type UpdateMeInput = {
  readonly name?: Maybe<Scalars['String']>;
  readonly isPublicArtist?: Maybe<Scalars['Boolean']>;
  readonly isPublicAlbum?: Maybe<Scalars['Boolean']>;
  readonly newPassword?: Maybe<Scalars['String']>;
  readonly newPasswordConfirmation?: Maybe<Scalars['String']>;
  readonly currentPassword?: Maybe<Scalars['String']>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of UpdateMe */
export type UpdateMePayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly currentUser?: Maybe<CurrentUser>;
};

/** Autogenerated input type of UpsertAlbum */
export type UpsertAlbumInput = {
  /** 指定したアルバムのトラック(ISRC)を含んでいる別音楽サービスのアルバムを一括登録 */
  readonly albumId?: Maybe<Scalars['TTID']>;
  /** Apple Music か iTunes のアルバムを登録 */
  readonly appleMusicId?: Maybe<Scalars['String']>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of UpsertAlbum */
export type UpsertAlbumPayload = {
  /** 追加されたアルバム */
  readonly albums?: Maybe<ReadonlyArray<Album>>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of UpsertArtist */
export type UpsertArtistInput = {
  /**
   * アーティスト名から全ての音楽サービスのアーティストを登録。登録後、関連アルバム、トラックを全て保存する。
   * (ありきたりなアーティスト名の場合は関係のないアーティストが登録される可能性があるため注意)
   */
  readonly artistName?: Maybe<Scalars['String']>;
  /** アーティストに関連する音楽サービスアーティストを更新。関連アルバム、トラックを全て更新する。 */
  readonly artistId?: Maybe<Scalars['String']>;
  /** Apple Music のアーティストを登録。登録後、関連アルバム、トラックを全て保存する。 */
  readonly appleMusicId?: Maybe<Scalars['String']>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of UpsertArtist */
export type UpsertArtistPayload = {
  /** 追加されたアーティスト */
  readonly artists?: Maybe<ReadonlyArray<Artist>>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of UpsertPlaylist */
export type UpsertPlaylistInput = {
  /** IDがない場合は作成 */
  readonly playlistId?: Maybe<Scalars['TTID']>;
  /** タイトル */
  readonly name: Scalars['String'];
  /** 説明 */
  readonly description?: Maybe<Scalars['String']>;
  /** 公開種別 */
  readonly publicType: PlaylistPublicTypeEnum;
  /** トラックID */
  readonly trackIds?: Maybe<ReadonlyArray<Scalars['TTID']>>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of UpsertPlaylist */
export type UpsertPlaylistPayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
  /** 作成更新されたプレイリスト */
  readonly playlist?: Maybe<Playlist>;
};

/** Autogenerated input type of UpsertRole */
export type UpsertRoleInput = {
  /** 変更したいロール。IDを指定しない場合は追加される */
  readonly id?: Maybe<Scalars['TTID']>;
  /** ロール名。IDを指定しない場合は必須。 */
  readonly name?: Maybe<Scalars['String']>;
  /** ロールの説明。IDを指定しない場合は必須。 */
  readonly description?: Maybe<Scalars['String']>;
  /** 変更したいアクション。全て上書きされる。IDを指定しない場合は必須。 */
  readonly allowedActions?: Maybe<ReadonlyArray<Scalars['String']>>;
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of UpsertRole */
export type UpsertRolePayload = {
  /** A unique identifier for the client performing the mutation. */
  readonly clientMutationId?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
  /** 追加更新されたロール */
  readonly role?: Maybe<Role>;
};

/** ユーザー */
export type User = {
  /** ID */
  readonly id: Scalars['TTID'];
  /** 名前 */
  readonly name: Scalars['String'];
  /** ユーザー名 */
  readonly username: Scalars['String'];
};

export type CurrentUserFieldsFragment = (
  Pick<CurrentUser, 'id' | 'name' | 'username' | 'registered'>
  & { readonly publicInformations: ReadonlyArray<Pick<PublicInformation, 'id' | 'publicType'>>, readonly role: Pick<Role, 'id' | 'name' | 'description' | 'allowedActions'>, readonly favorite: Pick<Favorite, 'albumIds' | 'artistIds' | 'trackIds' | 'playlistIds'> }
);

export type PlaylistFieldsFragment = (
  Pick<Playlist, 'id' | 'name' | 'description' | 'publicType' | 'isMine' | 'createdAt' | 'updatedAt'>
  & { readonly track?: Maybe<TrackFieldsFragment>, readonly author?: Maybe<Pick<User, 'id' | 'name' | 'username'>>, readonly items: ReadonlyArray<(
    Pick<PlaylistItem, 'trackNumber'>
    & { readonly track: TrackFieldsFragment }
  )> }
);

export type RadioFieldsFragment = (
  Pick<Radio, 'id' | 'name' | 'description' | 'startDatetime' | 'trackNumber' | 'durationMs' | 'isMine'>
  & { readonly tracks: ReadonlyArray<TrackFieldsFragment>, readonly track?: Maybe<TrackFieldsFragment> }
);

export type TrackFieldsFragment = (
  Pick<Track, 'id' | 'isrc' | 'name' | 'discNumber' | 'trackNumber' | 'durationMs' | 'previewUrl' | 'popularity'>
  & { readonly artworkL: Pick<Artwork, 'url' | 'width' | 'height'>, readonly artworkM: Pick<Artwork, 'url' | 'width' | 'height'>, readonly appleMusicTracks?: Maybe<ReadonlyArray<Pick<AppleMusicTrack, 'id' | 'name' | 'appleMusicId'>>>, readonly itunesTracks?: Maybe<ReadonlyArray<Pick<AppleMusicTrack, 'id' | 'name' | 'appleMusicId'>>> }
);

export type AddPlaylistItemsMutationVariables = Exact<{
  input: AddPlaylistItemsInput;
}>;


export type AddPlaylistItemsMutation = { readonly addPlaylistItems?: Maybe<{ readonly playlist?: Maybe<PlaylistFieldsFragment> }> };

export type ChangeFavoritesMutationVariables = Exact<{
  input: ChangeFavoritesInput;
}>;


export type ChangeFavoritesMutation = { readonly changeFavorites?: Maybe<{ readonly currentUser?: Maybe<CurrentUserFieldsFragment> }> };

export type CreateRadioMutationVariables = Exact<{
  input: CreateRadioInput;
}>;


export type CreateRadioMutation = { readonly createRadio?: Maybe<{ readonly radio?: Maybe<RadioFieldsFragment> }> };

export type DeletePlaylistMutationVariables = Exact<{
  input: DeletePlaylistInput;
}>;


export type DeletePlaylistMutation = { readonly deletePlaylist?: Maybe<Pick<DeletePlaylistPayload, 'result'>> };

export type DeleteRadioMutationVariables = Exact<{
  input: DeleteRadioInput;
}>;


export type DeleteRadioMutation = { readonly deleteRadio?: Maybe<{ readonly playlist?: Maybe<PlaylistFieldsFragment> }> };

export type LoginMutationVariables = Exact<{
  input: LoginInput;
}>;


export type LoginMutation = { readonly login?: Maybe<{ readonly currentUser?: Maybe<CurrentUserFieldsFragment> }> };

export type LogoutMutationVariables = Exact<{
  input: LogoutInput;
}>;


export type LogoutMutation = { readonly logout?: Maybe<{ readonly currentUser?: Maybe<CurrentUserFieldsFragment> }> };

export type SignupMutationVariables = Exact<{
  input: SignupInput;
}>;


export type SignupMutation = { readonly signup?: Maybe<{ readonly currentUser?: Maybe<CurrentUserFieldsFragment> }> };

export type UpdateMeMutationVariables = Exact<{
  input: UpdateMeInput;
}>;


export type UpdateMeMutation = { readonly updateMe?: Maybe<{ readonly currentUser?: Maybe<CurrentUserFieldsFragment> }> };

export type UpsertPlaylistMutationVariables = Exact<{
  input: UpsertPlaylistInput;
}>;


export type UpsertPlaylistMutation = { readonly upsertPlaylist?: Maybe<{ readonly playlist?: Maybe<PlaylistFieldsFragment> }> };

export type AlbumQueryVariables = Exact<{
  id: Scalars['TTID'];
}>;


export type AlbumQuery = { readonly album?: Maybe<(
    Pick<Album, 'id' | 'totalTracks' | 'name' | 'status' | 'releaseDate' | 'recordLabel' | 'copyright'>
    & { readonly artworkL: Pick<Artwork, 'url' | 'width' | 'height'>, readonly artworkM: Pick<Artwork, 'url' | 'width' | 'height'>, readonly appleMusicAlbum?: Maybe<Pick<AppleMusicAlbum, 'id' | 'appleMusicId'>>, readonly itunesAlbum?: Maybe<Pick<AppleMusicAlbum, 'id' | 'appleMusicId'>>, readonly tracks: ReadonlyArray<TrackFieldsFragment> }
  )> };

export type AlbumsQueryVariables = Exact<{
  cursor?: Maybe<CursorInputObject>;
  sort?: Maybe<AlbumsSortInputObject>;
  conditions?: Maybe<AlbumsConditionsInputObject>;
}>;


export type AlbumsQuery = { readonly items: ReadonlyArray<(
    Pick<Album, 'id' | 'name' | 'status'>
    & { readonly artworkM: Pick<Artwork, 'url' | 'width' | 'height'>, readonly appleMusicAlbum?: Maybe<Pick<AppleMusicAlbum, 'id'>>, readonly itunesAlbum?: Maybe<Pick<AppleMusicAlbum, 'id'>> }
  )> };

export type AppleMusicTokenQueryVariables = Exact<{ [key: string]: never; }>;


export type AppleMusicTokenQuery = Pick<Query, 'appleMusicToken'>;

export type ArtistQueryVariables = Exact<{
  id: Scalars['TTID'];
}>;


export type ArtistQuery = { readonly artist?: Maybe<(
    Pick<Artist, 'id' | 'name' | 'status'>
    & { readonly artworkL: Pick<Artwork, 'url' | 'width' | 'height'> }
  )> };

export type ArtistsQueryVariables = Exact<{
  cursor?: Maybe<CursorInputObject>;
  sort?: Maybe<ArtistsSortInputObject>;
  conditions?: Maybe<ArtistsConditionsInputObject>;
}>;


export type ArtistsQuery = { readonly items: ReadonlyArray<(
    Pick<Artist, 'id' | 'name' | 'status'>
    & { readonly artworkM: Pick<Artwork, 'url' | 'width' | 'height'> }
  )> };

export type MeQueryVariables = Exact<{ [key: string]: never; }>;


export type MeQuery = { readonly me: CurrentUserFieldsFragment };

export type PlaylistQueryVariables = Exact<{
  id: Scalars['TTID'];
}>;


export type PlaylistQuery = { readonly playlist?: Maybe<PlaylistFieldsFragment> };

export type PlaylistsQueryVariables = Exact<{
  cursor?: Maybe<CursorInputObject>;
  sort?: Maybe<PlaylistsSortInputObject>;
  conditions?: Maybe<PlaylistsConditionsInputObject>;
}>;


export type PlaylistsQuery = { readonly items: ReadonlyArray<(
    Pick<Playlist, 'id' | 'name' | 'createdAt' | 'updatedAt'>
    & { readonly author?: Maybe<Pick<User, 'id' | 'name' | 'username'>>, readonly track?: Maybe<TrackFieldsFragment> }
  )> };

export type RadioQueryVariables = Exact<{
  id: Scalars['TTID'];
}>;


export type RadioQuery = { readonly radio?: Maybe<RadioFieldsFragment> };

export type RadiosQueryVariables = Exact<{
  cursor?: Maybe<CursorInputObject>;
  sort?: Maybe<RadiosSortInputObject>;
  conditions?: Maybe<RadiosConditionsInputObject>;
}>;


export type RadiosQuery = { readonly items: ReadonlyArray<(
    Pick<Radio, 'id' | 'name'>
    & { readonly track?: Maybe<TrackFieldsFragment> }
  )> };

export type TrackQueryVariables = Exact<{
  id: Scalars['TTID'];
}>;


export type TrackQuery = { readonly track?: Maybe<TrackFieldsFragment> };

export type TracksQueryVariables = Exact<{
  cursor?: Maybe<CursorInputObject>;
  sort?: Maybe<TracksSortInputObject>;
  conditions?: Maybe<TracksConditionsInputObject>;
}>;


export type TracksQuery = { readonly items: ReadonlyArray<TrackFieldsFragment> };

export const CurrentUserFieldsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CurrentUserFields"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CurrentUser"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"username"}},{"kind":"Field","name":{"kind":"Name","value":"registered"}},{"kind":"Field","name":{"kind":"Name","value":"publicInformations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"publicType"}}]}},{"kind":"Field","name":{"kind":"Name","value":"role"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"allowedActions"}}]}},{"kind":"Field","name":{"kind":"Name","value":"favorite"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"albumIds"}},{"kind":"Field","name":{"kind":"Name","value":"artistIds"}},{"kind":"Field","name":{"kind":"Name","value":"trackIds"}},{"kind":"Field","name":{"kind":"Name","value":"playlistIds"}}]}}]}}]} as unknown as DocumentNode<CurrentUserFieldsFragment, unknown>;
export const TrackFieldsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TrackFields"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Track"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isrc"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"discNumber"}},{"kind":"Field","name":{"kind":"Name","value":"trackNumber"}},{"kind":"Field","name":{"kind":"Name","value":"durationMs"}},{"kind":"Field","name":{"kind":"Name","value":"previewUrl"}},{"kind":"Field","name":{"kind":"Name","value":"popularity"}},{"kind":"Field","name":{"kind":"Name","value":"artworkL"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","name":{"kind":"Name","value":"artworkM"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","name":{"kind":"Name","value":"appleMusicTracks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"appleMusicId"}}]}},{"kind":"Field","name":{"kind":"Name","value":"itunesTracks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"appleMusicId"}}]}}]}}]} as unknown as DocumentNode<TrackFieldsFragment, unknown>;
export const PlaylistFieldsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PlaylistFields"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Playlist"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"publicType"}},{"kind":"Field","name":{"kind":"Name","value":"isMine"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}},{"kind":"Field","name":{"kind":"Name","value":"track"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TrackFields"}}]}},{"kind":"Field","name":{"kind":"Name","value":"author"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"username"}}]}},{"kind":"Field","name":{"kind":"Name","value":"items"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trackNumber"}},{"kind":"Field","name":{"kind":"Name","value":"track"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TrackFields"}}]}}]}}]}},...TrackFieldsFragmentDoc.definitions]} as unknown as DocumentNode<PlaylistFieldsFragment, unknown>;
export const RadioFieldsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RadioFields"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Radio"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"startDatetime"}},{"kind":"Field","name":{"kind":"Name","value":"trackNumber"}},{"kind":"Field","name":{"kind":"Name","value":"durationMs"}},{"kind":"Field","name":{"kind":"Name","value":"isMine"}},{"kind":"Field","name":{"kind":"Name","value":"tracks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TrackFields"}}]}},{"kind":"Field","name":{"kind":"Name","value":"track"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TrackFields"}}]}}]}},...TrackFieldsFragmentDoc.definitions]} as unknown as DocumentNode<RadioFieldsFragment, unknown>;
export const AddPlaylistItemsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AddPlaylistItems"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AddPlaylistItemsInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"addPlaylistItems"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"playlist"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PlaylistFields"}}]}}]}}]}},...PlaylistFieldsFragmentDoc.definitions]} as unknown as DocumentNode<AddPlaylistItemsMutation, AddPlaylistItemsMutationVariables>;
export const ChangeFavoritesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ChangeFavorites"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ChangeFavoritesInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"changeFavorites"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CurrentUserFields"}}]}}]}}]}},...CurrentUserFieldsFragmentDoc.definitions]} as unknown as DocumentNode<ChangeFavoritesMutation, ChangeFavoritesMutationVariables>;
export const CreateRadioDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreateRadio"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateRadioInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createRadio"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"radio"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"RadioFields"}}]}}]}}]}},...RadioFieldsFragmentDoc.definitions]} as unknown as DocumentNode<CreateRadioMutation, CreateRadioMutationVariables>;
export const DeletePlaylistDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeletePlaylist"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DeletePlaylistInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deletePlaylist"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"result"}}]}}]}}]} as unknown as DocumentNode<DeletePlaylistMutation, DeletePlaylistMutationVariables>;
export const DeleteRadioDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeleteRadio"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DeleteRadioInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteRadio"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"playlist"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PlaylistFields"}}]}}]}}]}},...PlaylistFieldsFragmentDoc.definitions]} as unknown as DocumentNode<DeleteRadioMutation, DeleteRadioMutationVariables>;
export const LoginDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Login"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"LoginInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"login"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CurrentUserFields"}}]}}]}}]}},...CurrentUserFieldsFragmentDoc.definitions]} as unknown as DocumentNode<LoginMutation, LoginMutationVariables>;
export const LogoutDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Logout"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"LogoutInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"logout"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CurrentUserFields"}}]}}]}}]}},...CurrentUserFieldsFragmentDoc.definitions]} as unknown as DocumentNode<LogoutMutation, LogoutMutationVariables>;
export const SignupDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Signup"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"SignupInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"signup"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CurrentUserFields"}}]}}]}}]}},...CurrentUserFieldsFragmentDoc.definitions]} as unknown as DocumentNode<SignupMutation, SignupMutationVariables>;
export const UpdateMeDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdateMe"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpdateMeInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateMe"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CurrentUserFields"}}]}}]}}]}},...CurrentUserFieldsFragmentDoc.definitions]} as unknown as DocumentNode<UpdateMeMutation, UpdateMeMutationVariables>;
export const UpsertPlaylistDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpsertPlaylist"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpsertPlaylistInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"upsertPlaylist"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"playlist"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PlaylistFields"}}]}}]}}]}},...PlaylistFieldsFragmentDoc.definitions]} as unknown as DocumentNode<UpsertPlaylistMutation, UpsertPlaylistMutationVariables>;
export const AlbumDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Album"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"TTID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"album"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"totalTracks"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"releaseDate"}},{"kind":"Field","name":{"kind":"Name","value":"recordLabel"}},{"kind":"Field","name":{"kind":"Name","value":"copyright"}},{"kind":"Field","name":{"kind":"Name","value":"artworkL"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","name":{"kind":"Name","value":"artworkM"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","name":{"kind":"Name","value":"appleMusicAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"appleMusicId"}}]}},{"kind":"Field","name":{"kind":"Name","value":"itunesAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"appleMusicId"}}]}},{"kind":"Field","name":{"kind":"Name","value":"tracks"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TrackFields"}}]}}]}}]}},...TrackFieldsFragmentDoc.definitions]} as unknown as DocumentNode<AlbumQuery, AlbumQueryVariables>;
export const AlbumsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Albums"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"CursorInputObject"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sort"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"AlbumsSortInputObject"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conditions"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"AlbumsConditionsInputObject"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"items"},"name":{"kind":"Name","value":"albums"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sort"}}},{"kind":"Argument","name":{"kind":"Name","value":"conditions"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conditions"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"artworkM"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}},{"kind":"Field","name":{"kind":"Name","value":"appleMusicAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"itunesAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<AlbumsQuery, AlbumsQueryVariables>;
export const AppleMusicTokenDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AppleMusicToken"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"appleMusicToken"}}]}}]} as unknown as DocumentNode<AppleMusicTokenQuery, AppleMusicTokenQueryVariables>;
export const ArtistDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Artist"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"TTID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"artist"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"artworkL"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}}]}}]}}]} as unknown as DocumentNode<ArtistQuery, ArtistQueryVariables>;
export const ArtistsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Artists"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"CursorInputObject"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sort"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ArtistsSortInputObject"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conditions"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ArtistsConditionsInputObject"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"items"},"name":{"kind":"Name","value":"artists"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sort"}}},{"kind":"Argument","name":{"kind":"Name","value":"conditions"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conditions"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"artworkM"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"width"}},{"kind":"Field","name":{"kind":"Name","value":"height"}}]}}]}}]}}]} as unknown as DocumentNode<ArtistsQuery, ArtistsQueryVariables>;
export const MeDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Me"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"me"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CurrentUserFields"}}]}}]}},...CurrentUserFieldsFragmentDoc.definitions]} as unknown as DocumentNode<MeQuery, MeQueryVariables>;
export const PlaylistDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Playlist"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"TTID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"playlist"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PlaylistFields"}}]}}]}},...PlaylistFieldsFragmentDoc.definitions]} as unknown as DocumentNode<PlaylistQuery, PlaylistQueryVariables>;
export const PlaylistsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Playlists"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"CursorInputObject"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sort"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"PlaylistsSortInputObject"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conditions"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"PlaylistsConditionsInputObject"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"items"},"name":{"kind":"Name","value":"playlists"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sort"}}},{"kind":"Argument","name":{"kind":"Name","value":"conditions"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conditions"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"author"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"username"}}]}},{"kind":"Field","name":{"kind":"Name","value":"track"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TrackFields"}}]}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]}},...TrackFieldsFragmentDoc.definitions]} as unknown as DocumentNode<PlaylistsQuery, PlaylistsQueryVariables>;
export const RadioDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Radio"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"TTID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"radio"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"RadioFields"}}]}}]}},...RadioFieldsFragmentDoc.definitions]} as unknown as DocumentNode<RadioQuery, RadioQueryVariables>;
export const RadiosDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Radios"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"CursorInputObject"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sort"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"RadiosSortInputObject"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conditions"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"RadiosConditionsInputObject"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"items"},"name":{"kind":"Name","value":"radios"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sort"}}},{"kind":"Argument","name":{"kind":"Name","value":"conditions"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conditions"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"track"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TrackFields"}}]}}]}}]}},...TrackFieldsFragmentDoc.definitions]} as unknown as DocumentNode<RadiosQuery, RadiosQueryVariables>;
export const TrackDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Track"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"TTID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"track"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TrackFields"}}]}}]}},...TrackFieldsFragmentDoc.definitions]} as unknown as DocumentNode<TrackQuery, TrackQueryVariables>;
export const TracksDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Tracks"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"CursorInputObject"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sort"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"TracksSortInputObject"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"conditions"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"TracksConditionsInputObject"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"items"},"name":{"kind":"Name","value":"tracks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sort"}}},{"kind":"Argument","name":{"kind":"Name","value":"conditions"},"value":{"kind":"Variable","name":{"kind":"Name","value":"conditions"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TrackFields"}}]}}]}},...TrackFieldsFragmentDoc.definitions]} as unknown as DocumentNode<TracksQuery, TracksQueryVariables>;